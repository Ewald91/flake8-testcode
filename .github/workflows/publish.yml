name: Publish package (Pypi)

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Release type
        options: 
        - major
        - minor
        - patch
        - premajor
        - preminor
        - prepatch
        - prerelease

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry 
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Bump version Poetry
        id: version
        run: |
          echo "new_version=$(poetry version ${{ github.event.inputs.type }} --dry-run -s)" >> $GITHUB_OUTPUT &&
          poetry version ${{ github.event.inputs.type }}
      
      - name : Create tag
        id: tag
        run: |
          git config --global user.name "Ewald91" && 
          git config --global user.email "ewaldverhoeven@hotmail.com" &&
          git add pyproject.toml
          git commit -m "bump pyproject.toml version by poetry in pipeline"
          git push 
          git tag -a v${{ steps.version.outputs.new_version }} -m "create new tag for release by pipeline"&&
          git push origin v${{ steps.version.outputs.new_version }}


      # - name: Set poetry configurations
      #   run: |
      #     poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }} &&
      #     poetry config http-basic.pypi ${{ secrets.PYPI_USERNAME }} ${{ secrets.PYPI.PASSWORD }}
      # - name: Publish package to pypi-token.pypi
      #   run: |
      #     poetry publish

